{"version":3,"sources":["../../src/parse/parseBook.js"],"names":["Promise","require","timing","Book","parseIgnore","parseConfig","parseGlossary","parseSummary","parseReadme","parseLanguages","parseBookContent","book","then","parseMultilingualBook","languages","getLanguages","langList","getList","reduce","currentBook","lang","langID","getID","child","createFromParent","ignore","getIgnore","result","add","set","addLanguageBook","parseBook","measure","resultBook","isMultilingual","module","exports"],"mappings":";;AAAA,IAAMA,UAAUC,QAAQ,kBAAR,CAAhB;AACA,IAAMC,SAASD,QAAQ,iBAAR,CAAf;AACA,IAAME,OAAOF,QAAQ,gBAAR,CAAb;;AAEA,IAAMG,cAAcH,QAAQ,eAAR,CAApB;AACA,IAAMI,cAAcJ,QAAQ,eAAR,CAApB;AACA,IAAMK,gBAAgBL,QAAQ,iBAAR,CAAtB;AACA,IAAMM,eAAeN,QAAQ,gBAAR,CAArB;AACA,IAAMO,cAAcP,QAAQ,eAAR,CAApB;AACA,IAAMQ,iBAAiBR,QAAQ,kBAAR,CAAvB;;AAEA;;;;;;AAMA,SAASS,gBAAT,CAA0BC,IAA1B,EAAgC;AAC5B,WAAOX,QAAQW,IAAR,EACFC,IADE,CACGJ,WADH,EAEFI,IAFE,CAEGL,YAFH,EAGFK,IAHE,CAGGN,aAHH,CAAP;AAIH;;AAED;;;;;;AAMA,SAASO,qBAAT,CAA+BF,IAA/B,EAAqC;AACjC,QAAMG,YAAYH,KAAKI,YAAL,EAAlB;AACA,QAAMC,WAAWF,UAAUG,OAAV,EAAjB;;AAEA,WAAOjB,QAAQkB,MAAR,CAAeF,QAAf,EAAyB,UAACG,WAAD,EAAcC,IAAd,EAAuB;AACnD,YAAMC,SAASD,KAAKE,KAAL,EAAf;AACA,YAAMC,QAAQpB,KAAKqB,gBAAL,CAAsBL,WAAtB,EAAmCE,MAAnC,CAAd;AACA,YAAII,SAASN,YAAYO,SAAZ,EAAb;;AAEA,eAAO1B,QAAQuB,KAAR,EACNX,IADM,CACDP,WADC,EAENO,IAFM,CAEDF,gBAFC,EAGNE,IAHM,CAGD,UAACe,MAAD,EAAY;AACd;AACAF,qBAASA,OAAOG,GAAP,CAAWP,SAAS,KAApB,CAAT;AACAF,0BAAcA,YAAYU,GAAZ,CAAgB,QAAhB,EAA0BJ,MAA1B,CAAd;;AAEA,mBAAON,YAAYW,eAAZ,CAA4BT,MAA5B,EAAoCM,MAApC,CAAP;AACH,SATM,CAAP;AAUH,KAfM,EAeJhB,IAfI,CAAP;AAgBH;;AAGD;;;;;;AAMA,SAASoB,SAAT,CAAmBpB,IAAnB,EAAyB;AACrB,WAAOT,OAAO8B,OAAP,CACH,YADG,EAEHhC,QAAQW,IAAR,EACCC,IADD,CACMR,WADN,EAECQ,IAFD,CAEMP,WAFN,EAGCO,IAHD,CAGMH,cAHN,EAICG,IAJD,CAIM,UAACqB,UAAD,EAAgB;AAClB,YAAIA,WAAWC,cAAX,EAAJ,EAAiC;AAC7B,mBAAOrB,sBAAsBoB,UAAtB,CAAP;AACH,SAFD,MAEO;AACH,mBAAOvB,iBAAiBuB,UAAjB,CAAP;AACH;AACJ,KAVD,CAFG,CAAP;AAcH;;AAEDE,OAAOC,OAAP,GAAiBL,SAAjB","file":"parseBook.js","sourcesContent":["const Promise = require('../utils/promise');\nconst timing = require('../utils/timing');\nconst Book = require('../models/book');\n\nconst parseIgnore = require('./parseIgnore');\nconst parseConfig = require('./parseConfig');\nconst parseGlossary = require('./parseGlossary');\nconst parseSummary = require('./parseSummary');\nconst parseReadme = require('./parseReadme');\nconst parseLanguages = require('./parseLanguages');\n\n/**\n * Parse content of a book\n *\n * @param {Book} book\n * @return {Promise<Book>}\n */\nfunction parseBookContent(book) {\n    return Promise(book)\n        .then(parseReadme)\n        .then(parseSummary)\n        .then(parseGlossary);\n}\n\n/**\n * Parse a multilingual book\n *\n * @param {Book} book\n * @return {Promise<Book>}\n */\nfunction parseMultilingualBook(book) {\n    const languages = book.getLanguages();\n    const langList = languages.getList();\n\n    return Promise.reduce(langList, (currentBook, lang) => {\n        const langID = lang.getID();\n        const child = Book.createFromParent(currentBook, langID);\n        let ignore = currentBook.getIgnore();\n\n        return Promise(child)\n        .then(parseConfig)\n        .then(parseBookContent)\n        .then((result) => {\n            // Ignore content of this book when generating parent book\n            ignore = ignore.add(langID + '/**');\n            currentBook = currentBook.set('ignore', ignore);\n\n            return currentBook.addLanguageBook(langID, result);\n        });\n    }, book);\n}\n\n\n/**\n * Parse a whole book from a filesystem\n *\n * @param {Book} book\n * @return {Promise<Book>}\n */\nfunction parseBook(book) {\n    return timing.measure(\n        'parse.book',\n        Promise(book)\n        .then(parseIgnore)\n        .then(parseConfig)\n        .then(parseLanguages)\n        .then((resultBook) => {\n            if (resultBook.isMultilingual()) {\n                return parseMultilingualBook(resultBook);\n            } else {\n                return parseBookContent(resultBook);\n            }\n        })\n    );\n}\n\nmodule.exports = parseBook;\n"]}