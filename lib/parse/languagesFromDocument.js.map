{"version":3,"sources":["../../src/parse/languagesFromDocument.js"],"names":["require","BLOCKS","Languages","listArticles","isList","node","type","OL_LIST","UL_LIST","languagesFromDocument","document","nodes","list","find","articles","createFromList","filter","article","ref","map","title","path","module","exports"],"mappings":";;eAAmBA,QAAQ,WAAR,C;IAAXC,M,YAAAA,M;;AACR,IAAMC,YAAYF,QAAQ,qBAAR,CAAlB;;gBACyBA,QAAQ,uBAAR,C;IAAjBG,Y,aAAAA,Y;;AAER,IAAMC,SAAS,SAATA,MAAS;AAAA,WAAQC,KAAKC,IAAL,KAAcL,OAAOM,OAArB,IAAgCF,KAAKC,IAAL,KAAcL,OAAOO,OAA7D;AAAA,CAAf;;AAEA;;;;;AAKA,SAASC,qBAAT,CAA+BC,QAA/B,EAAyC;AAAA,QAC7BC,KAD6B,GACnBD,QADmB,CAC7BC,KAD6B;;;AAGrC,QAAMC,OAAOD,MAAME,IAAN,CAAWT,MAAX,CAAb;;AAEA,QAAI,CAACQ,IAAL,EAAW;AACP,eAAO,IAAIV,SAAJ,EAAP;AACH;;AAED,QAAMY,WAAWX,aAAaS,IAAb,CAAjB;;AAEA,WAAOV,UAAUa,cAAV,CACHD,SACCE,MADD,CACQ;AAAA,eAAWC,QAAQC,GAAnB;AAAA,KADR,EAECC,GAFD,CAEK;AAAA,eAAY,EAAEC,OAAOH,QAAQG,KAAjB,EAAwBC,MAAMJ,QAAQC,GAAtC,EAAZ;AAAA,KAFL,CADG,CAAP;AAKH;;AAEDI,OAAOC,OAAP,GAAiBd,qBAAjB","file":"languagesFromDocument.js","sourcesContent":["const { BLOCKS } = require('markup-it');\nconst Languages = require('../models/languages');\nconst { listArticles } = require('./summaryFromDocument');\n\nconst isList = node => node.type === BLOCKS.OL_LIST || node.type === BLOCKS.UL_LIST;\n\n/**\n * Parse a languages listing from a document.\n * @param  {Document} document\n * @return {Languages} languages\n */\nfunction languagesFromDocument(document) {\n    const { nodes } = document;\n\n    const list = nodes.find(isList);\n\n    if (!list) {\n        return new Languages();\n    }\n\n    const articles = listArticles(list);\n\n    return Languages.createFromList(\n        articles\n        .filter(article => article.ref)\n        .map(article => ({ title: article.title, path: article.ref }))\n    );\n}\n\nmodule.exports = languagesFromDocument;\n"]}