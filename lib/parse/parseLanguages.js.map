{"version":3,"sources":["../../src/parse/parseLanguages.js"],"names":["lookupStructureFile","require","languagesFromDocument","parseLanguages","book","logger","fs","getContentFS","then","file","debug","ln","path","parse","document","languages","merge","info","list","size","set","module","exports"],"mappings":";;AAAA,IAAMA,sBAAsBC,QAAQ,uBAAR,CAA5B;AACA,IAAMC,wBAAwBD,QAAQ,yBAAR,CAA9B;;AAEA;;;;;;AAMA,SAASE,cAAT,CAAwBC,IAAxB,EAA8B;AAAA,QAClBC,MADkB,GACPD,IADO,CAClBC,MADkB;;AAE1B,QAAMC,KAAKF,KAAKG,YAAL,EAAX;;AAEA,WAAOP,oBAAoBI,IAApB,EAA0B,OAA1B,EACNI,IADM,CACD,UAACC,IAAD,EAAU;AACZ,YAAI,CAACA,IAAL,EAAW;AACP,mBAAOL,IAAP;AACH;;AAEDC,eAAOK,KAAP,CAAaC,EAAb,+BAA4CF,KAAKG,IAAjD;;AAEA,eAAOH,KAAKI,KAAL,CAAWP,EAAX,EACNE,IADM,CACD,UAACM,QAAD,EAAc;AAChB,gBAAIC,YAAYb,sBAAsBY,QAAtB,CAAhB;AACAC,wBAAYA,UAAUC,KAAV,CAAgB,EAAEP,UAAF,EAAhB,CAAZ;;AAEAJ,mBAAOY,IAAP,CAAYN,EAAZ,sCAAkDI,UAAUG,IAAV,CAAeC,IAAjE;;AAEA,mBAAOf,KAAKgB,GAAL,CAAS,WAAT,EAAsBL,SAAtB,CAAP;AACH,SARM,CAAP;AASH,KAjBM,CAAP;AAkBH;;AAEDM,OAAOC,OAAP,GAAiBnB,cAAjB","file":"parseLanguages.js","sourcesContent":["const lookupStructureFile = require('./lookupStructureFile');\nconst languagesFromDocument = require('./languagesFromDocument');\n\n/**\n * Parse languages list from book\n *\n * @param {Book} book\n * @return {Promise<Book>}\n */\nfunction parseLanguages(book) {\n    const { logger } = book;\n    const fs = book.getContentFS();\n\n    return lookupStructureFile(book, 'langs')\n    .then((file) => {\n        if (!file) {\n            return book;\n        }\n\n        logger.debug.ln(`languages index found at ${file.path}`);\n\n        return file.parse(fs)\n        .then((document) => {\n            let languages = languagesFromDocument(document);\n            languages = languages.merge({ file });\n\n            logger.info.ln(`parsing multilingual book, with ${languages.list.size} languages`);\n\n            return book.set('languages', languages);\n        });\n    });\n}\n\nmodule.exports = parseLanguages;\n"]}