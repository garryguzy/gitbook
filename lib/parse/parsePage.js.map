{"version":3,"sources":["../../src/parse/parsePage.js"],"names":["parsePageFromString","require","parsePage","book","page","fs","getContentFS","file","getFile","readAsString","getPath","then","content","module","exports"],"mappings":";;AAAA,IAAMA,sBAAsBC,QAAQ,uBAAR,CAA5B;;AAEA;;;;;;;AAOA,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,IAAzB,EAA+B;AAC3B,QAAMC,KAAKF,KAAKG,YAAL,EAAX;AACA,QAAMC,OAAOH,KAAKI,OAAL,EAAb;;AAEA,WAAOH,GAAGI,YAAH,CAAgBF,KAAKG,OAAL,EAAhB,EACNC,IADM,CACD,UAACC,OAAD,EAAa;AACf,eAAOZ,oBAAoBI,IAApB,EAA0BQ,OAA1B,CAAP;AACH,KAHM,CAAP;AAIH;;AAGDC,OAAOC,OAAP,GAAiBZ,SAAjB","file":"parsePage.js","sourcesContent":["const parsePageFromString = require('./parsePageFromString');\n\n/**\n * Parse a page, read its content and parse the YAMl header\n *\n * @param {Book} book\n * @param {Page} page\n * @return {Promise<Page>}\n */\nfunction parsePage(book, page) {\n    const fs = book.getContentFS();\n    const file = page.getFile();\n\n    return fs.readAsString(file.getPath())\n    .then((content) => {\n        return parsePageFromString(page, content);\n    });\n}\n\n\nmodule.exports = parsePage;\n"]}