{"version":3,"sources":["../../src/templating/replaceShortcuts.js"],"names":["escapeStringRegexp","require","listShortcuts","applyShortcut","content","shortcut","start","getStart","end","getEnd","tagStart","getStartTag","tagEnd","getEndTag","regex","RegExp","replace","all","match","replaceShortcuts","blocks","filePath","shortcuts","reduce","module","exports"],"mappings":";;AAAA,IAAMA,qBAAqBC,QAAQ,sBAAR,CAA3B;AACA,IAAMC,gBAAgBD,QAAQ,iBAAR,CAAtB;;AAEA;;;;;;AAMA,SAASE,aAAT,CAAuBC,OAAvB,EAAgCC,QAAhC,EAA0C;AACtC,QAAMC,QAAQD,SAASE,QAAT,EAAd;AACA,QAAMC,MAAMH,SAASI,MAAT,EAAZ;;AAEA,QAAMC,WAAWL,SAASM,WAAT,EAAjB;AACA,QAAMC,SAASP,SAASQ,SAAT,EAAf;;AAEA,QAAMC,QAAQ,IAAIC,MAAJ,CACVf,mBAAmBM,KAAnB,IAA4B,oBAA5B,GAAmDN,mBAAmBQ,GAAnB,CADzC,EAEX,GAFW,CAAd;AAIA,WAAOJ,QAAQY,OAAR,CAAgBF,KAAhB,EAAuB,UAACG,GAAD,EAAMC,KAAN,EAAgB;AAC1C,eAAO,QAAQR,QAAR,GAAmB,KAAnB,GAA2BQ,KAA3B,GAAmC,KAAnC,GAA2CN,MAA3C,GAAoD,KAA3D;AACH,KAFM,CAAP;AAGH;;AAED;;;;;;;;AAQA,SAASO,gBAAT,CAA0BC,MAA1B,EAAkCC,QAAlC,EAA4CjB,OAA5C,EAAqD;AACjD,QAAMkB,YAAYpB,cAAckB,MAAd,EAAsBC,QAAtB,CAAlB;AACA,WAAOC,UAAUC,MAAV,CAAiBpB,aAAjB,EAAgCC,OAAhC,CAAP;AACH;;AAEDoB,OAAOC,OAAP,GAAiBN,gBAAjB","file":"replaceShortcuts.js","sourcesContent":["const escapeStringRegexp = require('escape-string-regexp');\nconst listShortcuts = require('./listShortcuts');\n\n/**\n * Apply a shortcut of block to a template\n * @param {String} content\n * @param {Shortcut} shortcut\n * @return {String}\n */\nfunction applyShortcut(content, shortcut) {\n    const start = shortcut.getStart();\n    const end = shortcut.getEnd();\n\n    const tagStart = shortcut.getStartTag();\n    const tagEnd = shortcut.getEndTag();\n\n    const regex = new RegExp(\n        escapeStringRegexp(start) + '([\\\\s\\\\S]*?[^\\\\$])' + escapeStringRegexp(end),\n       'g'\n    );\n    return content.replace(regex, (all, match) => {\n        return '{% ' + tagStart + ' %}' + match + '{% ' + tagEnd + ' %}';\n    });\n}\n\n/**\n * Replace shortcuts from blocks in a string\n *\n * @param {List<TemplateBlock>} engine\n * @param {String} filePath\n * @param {String} content\n * @return {String}\n */\nfunction replaceShortcuts(blocks, filePath, content) {\n    const shortcuts = listShortcuts(blocks, filePath);\n    return shortcuts.reduce(applyShortcut, content);\n}\n\nmodule.exports = replaceShortcuts;\n"]}