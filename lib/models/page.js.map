{"version":3,"sources":["../../src/models/page.js"],"names":["require","Record","Map","yaml","File","DEFAULTS","file","attributes","content","String","dir","Page","get","attrs","getAttributes","getContent","size","frontMatter","safeDump","toJS","skipInvalid","getFile","getPath","module","exports"],"mappings":";;;;;;;;;;eAAwBA,QAAQ,WAAR,C;IAAhBC,M,YAAAA,M;IAAQC,G,YAAAA,G;;AAChB,IAAMC,OAAOH,QAAQ,SAAR,CAAb;;AAEA,IAAMI,OAAOJ,QAAQ,QAAR,CAAb;;AAEA,IAAMK,WAAW;AACbC,UAAY,IAAIF,IAAJ,EADC;AAEb;AACAG,gBAAYL,KAHC;AAIb;AACAM,aAAYC,QALC;AAMb;AACAC,SAAYD,OAAO,KAAP;AAPC,CAAjB;;IAUME,I;;;;;;;;;;;kCACQ;AACN,mBAAO,KAAKC,GAAL,CAAS,MAAT,CAAP;AACH;;;wCAEe;AACZ,mBAAO,KAAKA,GAAL,CAAS,YAAT,CAAP;AACH;;;qCAEY;AACT,mBAAO,KAAKA,GAAL,CAAS,SAAT,CAAP;AACH;;;iCAEQ;AACL,mBAAO,KAAKA,GAAL,CAAS,KAAT,CAAP;AACH;;AAED;;;;;;;iCAIS;AACL,gBAAMC,QAAQ,KAAKC,aAAL,EAAd;AACA,gBAAMN,UAAU,KAAKO,UAAL,EAAhB;;AAEA,gBAAIF,MAAMG,IAAN,KAAe,CAAnB,EAAsB;AAClB,uBAAOR,OAAP;AACH;;AAED,gBAAMS,cAAc,UAAUd,KAAKe,QAAL,CAAcL,MAAMM,IAAN,EAAd,EAA4B,EAAEC,aAAa,IAAf,EAA5B,CAAV,GAA+D,SAAnF;AACA,mBAAQH,cAAcT,OAAtB;AACH;;AAED;;;;;;;kCAIU;AACN,mBAAO,KAAKa,OAAL,GAAeC,OAAf,EAAP;AACH;;AAED;;;;;;;;sCAKqBhB,I,EAAM;AACvB,mBAAO,IAAIK,IAAJ,CAAS;AACZL;AADY,aAAT,CAAP;AAGH;;;;EAlDcL,OAAOI,QAAP,C;;AAqDnBkB,OAAOC,OAAP,GAAiBb,IAAjB","file":"page.js","sourcesContent":["const { Record, Map } = require('immutable');\nconst yaml = require('js-yaml');\n\nconst File = require('./file');\n\nconst DEFAULTS = {\n    file:       new File(),\n    // Attributes extracted from the YAML header\n    attributes: Map(),\n    // Content of the page\n    content:    String(),\n    // Direction of the text\n    dir:        String('ltr')\n};\n\nclass Page extends Record(DEFAULTS) {\n    getFile() {\n        return this.get('file');\n    }\n\n    getAttributes() {\n        return this.get('attributes');\n    }\n\n    getContent() {\n        return this.get('content');\n    }\n\n    getDir() {\n        return this.get('dir');\n    }\n\n    /**\n     * Return page as text\n     * @return {String}\n    */\n    toText() {\n        const attrs = this.getAttributes();\n        const content = this.getContent();\n\n        if (attrs.size === 0) {\n            return content;\n        }\n\n        const frontMatter = '---\\n' + yaml.safeDump(attrs.toJS(), { skipInvalid: true }) + '---\\n\\n';\n        return (frontMatter + content);\n    }\n\n    /**\n     * Return path of the page\n     * @return {String}\n    */\n    getPath() {\n        return this.getFile().getPath();\n    }\n\n    /**\n     * Create a page for a file\n     * @param {File} file\n     * @return {Page}\n    */\n    static createForFile(file) {\n        return new Page({\n            file\n        });\n    }\n}\n\nmodule.exports = Page;\n"]}