{"version":3,"sources":["../../src/models/glossaryEntry.js"],"names":["require","Record","slug","DEFAULTS","name","String","description","GlossaryEntry","get","id","nameToID","module","exports"],"mappings":";;;;;;;;;;eAAmBA,QAAQ,WAAR,C;IAAXC,M,YAAAA,M;;AACR,IAAMC,OAAOF,QAAQ,eAAR,CAAb;;AAEA,IAAMG,WAAW;AACbC,UAAaC,QADA;AAEbC,iBAAaD;AAFA,CAAjB;;AAKA;;;;;IAKME,a;;;;;;;;;;;kCAWQ;AACN,mBAAO,KAAKC,GAAL,CAAS,MAAT,CAAP;AACH;;;yCAEgB;AACb,mBAAO,KAAKA,GAAL,CAAS,aAAT,CAAP;AACH;;;gCAEO;AACJ,mBAAO,KAAKC,EAAZ;AACH;;AAGD;;;;;;;;;;;AAtBA;;;;;4BAKS;AACL,mBAAOF,cAAcG,QAAd,CAAuB,KAAKN,IAA5B,CAAP;AACH;;;iCAqBeA,I,EAAM;AAClB,mBAAOF,KAAKE,IAAL,CAAP;AACH;;;;EAhCuBH,OAAOE,QAAP,C;;AAmC5BQ,OAAOC,OAAP,GAAiBL,aAAjB","file":"glossaryEntry.js","sourcesContent":["const { Record } = require('immutable');\nconst slug = require('github-slugid');\n\nconst DEFAULTS = {\n    name:        String(),\n    description: String()\n};\n\n/**\n * A definition represents an entry in the glossary.\n * @param {Class}\n */\n\nclass GlossaryEntry extends Record(DEFAULTS) {\n\n    /**\n     * Get identifier for this entry\n     *\n     * @return {String}\n     */\n    get id() {\n        return GlossaryEntry.nameToID(this.name);\n    }\n\n    getName() {\n        return this.get('name');\n    }\n\n    getDescription() {\n        return this.get('description');\n    }\n\n    getID() {\n        return this.id;\n    }\n\n\n    /**\n     * Normalize a glossary entry name into a unique id\n     *\n     * @param {String}\n     * @return {String}\n     */\n    static nameToID(name) {\n        return slug(name);\n    }\n}\n\nmodule.exports = GlossaryEntry;\n"]}