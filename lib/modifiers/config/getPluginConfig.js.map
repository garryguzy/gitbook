{"version":3,"sources":["../../../src/modifiers/config/getPluginConfig.js"],"names":["getPluginConfig","config","pluginName","pluginsConfig","getValues","get","undefined","pluginConf","toJS","module","exports"],"mappings":";;AAAA;;;;;;AAMA,SAASA,eAAT,CAAyBC,MAAzB,EAAiCC,UAAjC,EAA6C;AACzC,QAAMC,gBAAgBF,OAAOG,SAAP,GAAmBC,GAAnB,CAAuB,eAAvB,CAAtB;AACA,QAAIF,kBAAkBG,SAAtB,EAAiC;AAC7B,eAAO,EAAP;AACH;AACD,QAAMC,aAAaJ,cAAcE,GAAd,CAAkBH,UAAlB,CAAnB;AACA,QAAIK,eAAeD,SAAnB,EAA8B;AAC1B,eAAO,EAAP;AACH,KAFD,MAEO;AACH,eAAOC,WAAWC,IAAX,EAAP;AACH;AACJ;;AAEDC,OAAOC,OAAP,GAAiBV,eAAjB","file":"getPluginConfig.js","sourcesContent":["/**\n * Return the configuration for a plugin\n * @param {Config} config\n * @param {String} pluginName\n * @return {Object}\n */\nfunction getPluginConfig(config, pluginName) {\n    const pluginsConfig = config.getValues().get('pluginsConfig');\n    if (pluginsConfig === undefined) {\n        return {};\n    }\n    const pluginConf = pluginsConfig.get(pluginName);\n    if (pluginConf === undefined) {\n        return {};\n    } else {\n        return pluginConf.toJS();\n    }\n}\n\nmodule.exports = getPluginConfig;\n"]}