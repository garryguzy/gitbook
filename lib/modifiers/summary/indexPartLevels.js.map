{"version":3,"sources":["../../../src/modifiers/summary/indexPartLevels.js"],"names":["indexArticleLevels","require","indexPartLevels","part","index","baseLevel","String","articles","getArticles","map","inner","i","merge","level","module","exports"],"mappings":";;AAAA,IAAMA,qBAAqBC,QAAQ,sBAAR,CAA3B;;AAEA;;;;;;;AAOA,SAASC,eAAT,CAAyBC,IAAzB,EAA+BC,KAA/B,EAAsC;AAClC,QAAMC,YAAYC,OAAOF,QAAQ,CAAf,CAAlB;AACA,QAAIG,WAAWJ,KAAKK,WAAL,EAAf;;AAEAD,eAAWA,SAASE,GAAT,CAAa,UAACC,KAAD,EAAQC,CAAR,EAAc;AAClC,eAAOX,mBAAmBU,KAAnB,EAA0BL,YAAY,GAAZ,IAAmBM,IAAI,CAAvB,CAA1B,CAAP;AACH,KAFU,CAAX;;AAIA,WAAOR,KAAKS,KAAL,CAAW;AACdC,eAAOR,SADO;AAEdE;AAFc,KAAX,CAAP;AAIH;;AAEDO,OAAOC,OAAP,GAAiBb,eAAjB","file":"indexPartLevels.js","sourcesContent":["const indexArticleLevels = require('./indexArticleLevels');\n\n/**\n    Index levels in a part\n\n    @param {Part}\n    @param {Number} index\n    @return {Part}\n*/\nfunction indexPartLevels(part, index) {\n    const baseLevel = String(index + 1);\n    let articles = part.getArticles();\n\n    articles = articles.map((inner, i) => {\n        return indexArticleLevels(inner, baseLevel + '.' + (i + 1));\n    });\n\n    return part.merge({\n        level: baseLevel,\n        articles\n    });\n}\n\nmodule.exports = indexPartLevels;\n"]}