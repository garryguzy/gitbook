{"version":3,"sources":["../../../src/modifiers/summary/mergeAtLevel.js"],"names":["editArticleInList","articles","level","newArticle","map","article","articleLevel","getLevel","merge","indexOf","getArticles","set","editArticleInPart","part","mergeAtLevel","summary","newValue","levelParts","split","partIndex","Number","parts","getParts","get","isEditingPart","length","module","exports"],"mappings":";;AACA;;;;;;;;AAQA,SAASA,iBAAT,CAA2BC,QAA3B,EAAqCC,KAArC,EAA4CC,UAA5C,EAAwD;AACpD,WAAOF,SAASG,GAAT,CAAa,UAACC,OAAD,EAAa;AAC7B,YAAMC,eAAeD,QAAQE,QAAR,EAArB;;AAEA,YAAID,iBAAiBJ,KAArB,EAA4B;AACxB;AACA,mBAAOG,QAAQG,KAAR,CAAcL,UAAd,CAAP;AACH,SAHD,MAGO,IAAID,MAAMO,OAAN,CAAcH,YAAd,MAAgC,CAApC,EAAuC;AAC1C;AACA,gBAAML,YAAWD,kBAAkBK,QAAQK,WAAR,EAAlB,EAAyCR,KAAzC,EAAgDC,UAAhD,CAAjB;AACA,mBAAOE,QAAQM,GAAR,CAAY,UAAZ,EAAwBV,SAAxB,CAAP;AACH,SAJM,MAIA;AACH;AACA,mBAAOI,OAAP;AACH;AACJ,KAdM,CAAP;AAeH;;AAGD;;;;;;;;AAQA,SAASO,iBAAT,CAA2BC,IAA3B,EAAiCX,KAAjC,EAAwCC,UAAxC,EAAoD;AAChD,QAAIF,WAAWY,KAAKH,WAAL,EAAf;AACAT,eAAWD,kBAAkBC,QAAlB,EAA4BC,KAA5B,EAAmCC,UAAnC,CAAX;;AAEA,WAAOU,KAAKF,GAAL,CAAS,UAAT,EAAqBV,QAArB,CAAP;AACH;;AAGD;;;;;;;;AAQA,SAASa,YAAT,CAAsBC,OAAtB,EAA+Bb,KAA/B,EAAsCc,QAAtC,EAAgD;AAC5C,QAAMC,aAAaf,MAAMgB,KAAN,CAAY,GAAZ,CAAnB;AACA,QAAMC,YAAYC,OAAOH,WAAW,CAAX,CAAP,IAAwB,CAA1C;;AAEA,QAAII,QAAQN,QAAQO,QAAR,EAAZ;AACA,QAAIT,OAAOQ,MAAME,GAAN,CAAUJ,SAAV,CAAX;AACA,QAAI,CAACN,IAAL,EAAW;AACP,eAAOE,OAAP;AACH;;AAED,QAAMS,gBAAgBP,WAAWQ,MAAX,GAAoB,CAA1C;AACA,QAAID,aAAJ,EAAmB;AACfX,eAAOA,KAAKL,KAAL,CAAWQ,QAAX,CAAP;AACH,KAFD,MAEO;AACHH,eAAOD,kBAAkBC,IAAlB,EAAwBX,KAAxB,EAA+Bc,QAA/B,CAAP;AACH;;AAEDK,YAAQA,MAAMV,GAAN,CAAUQ,SAAV,EAAqBN,IAArB,CAAR;AACA,WAAOE,QAAQJ,GAAR,CAAY,OAAZ,EAAqBU,KAArB,CAAP;AACH;;AAGDK,OAAOC,OAAP,GAAiBb,YAAjB","file":"mergeAtLevel.js","sourcesContent":["\n/**\n    Edit a list of articles\n\n    @param {List<Article>} articles\n    @param {String} level\n    @param {Article} newArticle\n    @return {List<Article>}\n*/\nfunction editArticleInList(articles, level, newArticle) {\n    return articles.map((article) => {\n        const articleLevel = article.getLevel();\n\n        if (articleLevel === level) {\n            // it is the article to edit\n            return article.merge(newArticle);\n        } else if (level.indexOf(articleLevel) === 0) {\n            // it is a parent\n            const articles = editArticleInList(article.getArticles(), level, newArticle);\n            return article.set('articles', articles);\n        } else {\n            // This is not the article you are looking for\n            return article;\n        }\n    });\n}\n\n\n/**\n    Edit an article in a part\n\n    @param {Part} part\n    @param {String} level\n    @param {Article} newArticle\n    @return {Part}\n*/\nfunction editArticleInPart(part, level, newArticle) {\n    let articles = part.getArticles();\n    articles = editArticleInList(articles, level, newArticle);\n\n    return part.set('articles', articles);\n}\n\n\n/**\n    Edit an article, or a part, in a summary. Does a shallow merge.\n\n    @param {Summary} summary\n    @param {String} level\n    @param {Article|Part} newValue\n    @return {Summary}\n*/\nfunction mergeAtLevel(summary, level, newValue) {\n    const levelParts = level.split('.');\n    const partIndex = Number(levelParts[0]) - 1;\n\n    let parts = summary.getParts();\n    let part = parts.get(partIndex);\n    if (!part) {\n        return summary;\n    }\n\n    const isEditingPart = levelParts.length < 2;\n    if (isEditingPart) {\n        part = part.merge(newValue);\n    } else {\n        part = editArticleInPart(part, level, newValue);\n    }\n\n    parts = parts.set(partIndex, part);\n    return summary.set('parts', parts);\n}\n\n\nmodule.exports = mergeAtLevel;\n"]}