{"version":3,"sources":["../../../src/modifiers/summary/toDocument.js"],"names":["require","Document","Block","Inline","Text","BLOCKS","INLINES","articleToBlock","article","title","ref","articles","text","createFromString","innerNode","create","type","LINK","nodes","data","href","TEXT","size","push","articlesToBlock","LIST_ITEM","map","UL_LIST","summaryToDocument","summary","parts","HEADING_1","forEach","part","i","HEADING_2","HR","isEmpty","module","exports"],"mappings":";;eAA0CA,QAAQ,OAAR,C;IAAlCC,Q,YAAAA,Q;IAAUC,K,YAAAA,K;IAAOC,M,YAAAA,M;IAAQC,I,YAAAA,I;;gBACLJ,QAAQ,WAAR,C;IAApBK,M,aAAAA,M;IAAQC,O,aAAAA,O;;AAEhB;;;;;;;AAKA,SAASC,cAAT,CAAwBC,OAAxB,EAAiC;AAAA,QACrBC,KADqB,GACID,OADJ,CACrBC,KADqB;AAAA,QACdC,GADc,GACIF,OADJ,CACdE,GADc;AAAA,QACTC,QADS,GACIH,OADJ,CACTG,QADS;;AAE7B,QAAMC,OAAOR,KAAKS,gBAAL,CAAsBJ,KAAtB,CAAb;;AAEA;AACA,QAAMK,YAAYJ,MAAMP,OAAOY,MAAP,CAAc;AAClCC,cAAMV,QAAQW,IADoB;AAElCC,eAAO,CACHN,IADG,CAF2B;AAKlCO,cAAM;AACFC,kBAAMV;AADJ;AAL4B,KAAd,CAAN,GAQbE,IARL;;AAUA,QAAMM,QAAQ,CACVhB,MAAMa,MAAN,CAAa;AACTC,cAAMX,OAAOgB,IADJ;AAETH,eAAO,CACHJ,SADG;AAFE,KAAb,CADU,CAAd;;AASA,QAAIH,SAASW,IAAT,GAAgB,CAApB,EAAuB;AACnBJ,cAAMK,IAAN,CAAWC,gBAAgBb,QAAhB,CAAX;AACH;;AAED,WAAOT,MAAMa,MAAN,CAAa;AAChBC,cAAMX,OAAOoB,SADG;AAEhBP;AAFgB,KAAb,CAAP;AAIH;;AAED;;;;;AAKA,SAASM,eAAT,CAAyBb,QAAzB,EAAmC;AAC/B,QAAMO,QAAQP,SAASe,GAAT,CAAa;AAAA,eAAWnB,eAAeC,OAAf,CAAX;AAAA,KAAb,CAAd;AACA,WAAON,MAAMa,MAAN,CAAa;AAChBC,cAAMX,OAAOsB,OADG;AAEhBT;AAFgB,KAAb,CAAP;AAIH;;AAED;;;;;AAKA,SAASU,iBAAT,CAA2BC,OAA3B,EAAoC;AAAA,QACxBC,KADwB,GACdD,OADc,CACxBC,KADwB;;AAEhC,QAAMZ,QAAQ,CACVhB,MAAMa,MAAN,CAAa;AACTC,cAAMX,OAAO0B,SADJ;AAETb,eAAO,CACHd,KAAKS,gBAAL,CAAsB,SAAtB,CADG;AAFE,KAAb,CADU,CAAd;;AASAiB,UAAME,OAAN,CAAc,UAACC,IAAD,EAAOC,CAAP,EAAa;AAAA,YACfzB,KADe,GACKwB,IADL,CACfxB,KADe;AAAA,YACRE,QADQ,GACKsB,IADL,CACRtB,QADQ;;;AAGvB,YAAIF,KAAJ,EAAW;AACPS,kBAAMK,IAAN,CAAWrB,MAAMa,MAAN,CAAa;AACpBC,sBAAMX,OAAO8B,SADO;AAEpBjB,uBAAO,CACHd,KAAKS,gBAAL,CAAsBJ,KAAtB,CADG;AAFa,aAAb,CAAX;AAMH,SAPD,MAOO,IAAIyB,IAAI,CAAR,EAAW;AACdhB,kBAAMK,IAAN,CAAWrB,MAAMa,MAAN,CAAa;AACpBC,sBAAMX,OAAO+B;AADO,aAAb,CAAX;AAGH;;AAED,YAAI,CAACzB,SAAS0B,OAAT,EAAL,EAAyB;AACrBnB,kBAAMK,IAAN,CAAWC,gBAAgBb,QAAhB,CAAX;AACH;AACJ,KAnBD;;AAqBA,WAAOV,SAASc,MAAT,CAAgB,EAAEG,YAAF,EAAhB,CAAP;AACH;;AAEDoB,OAAOC,OAAP,GAAiBX,iBAAjB","file":"toDocument.js","sourcesContent":["const { Document, Block, Inline, Text } = require('slate');\nconst { BLOCKS, INLINES } = require('markup-it');\n\n/**\n * Convert an article in a list item node.\n * @param {SummaryArticle} article\n * @return {Block} item\n */\nfunction articleToBlock(article) {\n    const { title, ref, articles } = article;\n    const text = Text.createFromString(title);\n\n    // Text or link ?\n    const innerNode = ref ? Inline.create({\n        type: INLINES.LINK,\n        nodes: [\n            text\n        ],\n        data: {\n            href: ref\n        }\n    }) : text;\n\n    const nodes = [\n        Block.create({\n            type: BLOCKS.TEXT,\n            nodes: [\n                innerNode\n            ]\n        })\n    ];\n\n    if (articles.size > 0) {\n        nodes.push(articlesToBlock(articles));\n    }\n\n    return Block.create({\n        type: BLOCKS.LIST_ITEM,\n        nodes\n    });\n}\n\n/**\n * Convert a list of articles to a list node.\n * @param {List<SummaryArticle>} articles\n * @return {Block} list\n */\nfunction articlesToBlock(articles) {\n    const nodes = articles.map(article => articleToBlock(article));\n    return Block.create({\n        type: BLOCKS.UL_LIST,\n        nodes\n    });\n}\n\n/**\n * Convert a summary to document.\n * @param  {Summary}  summary\n * @return {Document} document\n */\nfunction summaryToDocument(summary) {\n    const { parts } = summary;\n    const nodes = [\n        Block.create({\n            type: BLOCKS.HEADING_1,\n            nodes: [\n                Text.createFromString('Summary')\n            ]\n        })\n    ];\n\n    parts.forEach((part, i) => {\n        const { title, articles } = part;\n\n        if (title) {\n            nodes.push(Block.create({\n                type: BLOCKS.HEADING_2,\n                nodes: [\n                    Text.createFromString(title)\n                ]\n            }));\n        } else if (i > 0) {\n            nodes.push(Block.create({\n                type: BLOCKS.HR\n            }));\n        }\n\n        if (!articles.isEmpty()) {\n            nodes.push(articlesToBlock(articles));\n        }\n    });\n\n    return Document.create({ nodes });\n}\n\nmodule.exports = summaryToDocument;\n"]}