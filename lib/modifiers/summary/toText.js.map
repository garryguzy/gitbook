{"version":3,"sources":["../../../src/modifiers/summary/toText.js"],"names":["summaryToDocument","require","parsers","error","summaryToText","summary","extension","file","parser","getByExt","getParser","FileNotParsableError","filename","path","document","toText","module","exports"],"mappings":";;AAAA,IAAMA,oBAAoBC,QAAQ,cAAR,CAA1B;AACA,IAAMC,UAAUD,QAAQ,eAAR,CAAhB;AACA,IAAME,QAAQF,QAAQ,mBAAR,CAAd;;AAEA;;;;;;AAMA,SAASG,aAAT,CAAuBC,OAAvB,EAAgCC,SAAhC,EAA2C;AAAA,QAC/BC,IAD+B,GACtBF,OADsB,CAC/BE,IAD+B;;AAEvC,QAAMC,SAASF,YAAYJ,QAAQO,QAAR,CAAiBH,SAAjB,CAAZ,GAA0CC,KAAKG,SAAL,EAAzD;;AAEA,QAAI,CAACF,MAAL,EAAa;AACT,cAAML,MAAMQ,oBAAN,CAA2B;AAC7BC,sBAAUL,KAAKM;AADc,SAA3B,CAAN;AAGH;;AAED;AACA,QAAMC,WAAWd,kBAAkBK,OAAlB,CAAjB;;AAEA;AACA,WAAOG,OAAOO,MAAP,CAAcD,QAAd,CAAP;AACH;;AAEDE,OAAOC,OAAP,GAAiBb,aAAjB","file":"toText.js","sourcesContent":["const summaryToDocument = require('./toDocument');\nconst parsers = require('../../parsers');\nconst error = require('../../utils/error');\n\n/**\n * Return summary serialized as text.\n * @param  {Summary} summary\n * @param  {String} extension?\n * @return {String}\n */\nfunction summaryToText(summary, extension) {\n    const { file } = summary;\n    const parser = extension ? parsers.getByExt(extension) : file.getParser();\n\n    if (!parser) {\n        throw error.FileNotParsableError({\n            filename: file.path\n        });\n    }\n\n    // Create a document representing the summary\n    const document = summaryToDocument(summary);\n\n    // Render the document as text\n    return parser.toText(document);\n}\n\nmodule.exports = summaryToText;\n"]}