{"version":3,"sources":["../../src/parsers/asciidoc.js"],"names":["require","State","AsciidoctorJS","asciidoc","asciidocjs","FILE_EXTENSIONS","toText","document","state","create","serializeDocument","toDocument","text","deserializeToDocument","toHTML","convert","attributes","prepare","toInlineHTML","doctype","module","exports","name"],"mappings":";;eAAkBA,QAAQ,WAAR,C;IAAVC,K,YAAAA,K;;AACR,IAAMC,gBAAgBF,QAAQ,gBAAR,CAAtB;AACA,IAAMG,WAAWH,QAAQ,wBAAR,CAAjB;;AAEA,IAAMI,aAAaF,eAAnB;;AAEA,IAAMG,kBAAkB,CACpB,OADoB,EAEpB,WAFoB,CAAxB;;AAKA;;;;;AAKA,SAASC,MAAT,CAAgBC,QAAhB,EAA0B;AACtB,QAAMC,QAAQP,MAAMQ,MAAN,CAAaN,QAAb,CAAd;AACA,WAAOK,MAAME,iBAAN,CAAwBH,QAAxB,CAAP;AACH;;AAED;;;;;AAKA,SAASI,UAAT,CAAoBC,IAApB,EAA0B;AACtB,QAAMJ,QAAQP,MAAMQ,MAAN,CAAaN,QAAb,CAAd;AACA,WAAOK,MAAMK,qBAAN,CAA4BD,IAA5B,CAAP;AACH;;AAED;;;;;AAKA,SAASE,MAAT,CAAgBF,IAAhB,EAAsB;AAClB,WAAOR,WAAWW,OAAX,CAAmBH,IAAnB,EAAyB;AAC5BI,oBAAY;AADgB,KAAzB,CAAP;AAGH;;AAED;;;;;AAKA,SAASC,OAAT,CAAiBL,IAAjB,EAAuB;AACnB,WAAOA,IAAP;AACH;;AAED;;;;;AAKA,SAASM,YAAT,CAAsBN,IAAtB,EAA4B;AACxB,WAAOR,WAAWW,OAAX,CAAmBH,IAAnB,EAAyB;AAC5BO,iBAAS,QADmB;AAE5BH,oBAAY;AAFgB,KAAzB,CAAP;AAIH;;AAEDI,OAAOC,OAAP,GAAiB;AACbC,UAAM,UADO;AAEbjB,oCAFa;AAGbY,oBAHa;AAIbN,0BAJa;AAKbL,kBALa;AAMbQ,kBANa;AAObI;AAPa,CAAjB","file":"asciidoc.js","sourcesContent":["const { State } = require('markup-it');\nconst AsciidoctorJS = require('asciidoctor.js');\nconst asciidoc = require('markup-it/lib/asciidoc');\n\nconst asciidocjs = AsciidoctorJS();\n\nconst FILE_EXTENSIONS = [\n    '.adoc',\n    '.asciidoc'\n];\n\n/**\n * Render a document as text.\n * @param  {Document} document\n * @return {String} text\n */\nfunction toText(document) {\n    const state = State.create(asciidoc);\n    return state.serializeDocument(document);\n}\n\n/**\n * Parse asciidoc into a document.\n * @param  {String} text\n * @return {Document} document\n */\nfunction toDocument(text) {\n    const state = State.create(asciidoc);\n    return state.deserializeToDocument(text);\n}\n\n/**\n * Render asciidoc to HTML.\n * @param  {String} text\n * @return {String} html\n */\nfunction toHTML(text) {\n    return asciidocjs.convert(text, {\n        attributes: 'showtitle'\n    });\n}\n\n/**\n * Prepare a document for parsing\n * @param  {String} text\n * @return {String} text\n */\nfunction prepare(text) {\n    return text;\n}\n\n/**\n * Render asciidoc to inline HTML.\n * @param  {String} text\n * @return {String} html\n */\nfunction toInlineHTML(text) {\n    return asciidocjs.convert(text, {\n        doctype: 'inline',\n        attributes: 'showtitle'\n    });\n}\n\nmodule.exports = {\n    name: 'asciidoc',\n    FILE_EXTENSIONS,\n    prepare,\n    toDocument,\n    toText,\n    toHTML,\n    toInlineHTML\n};\n"]}