{"version":3,"sources":["../../src/parsers/markdown.js"],"names":["require","State","markdown","html","annotateCodeBlocks","FILE_EXTENSIONS","toText","document","state","create","serializeDocument","toDocument","text","deserializeToDocument","prepare","doc","toHTML","toInlineHTML","module","exports","name"],"mappings":";;eAAkBA,QAAQ,WAAR,C;IAAVC,K,YAAAA,K;;AACR,IAAMC,WAAWF,QAAQ,wBAAR,CAAjB;AACA,IAAMG,OAAOH,QAAQ,oBAAR,CAAb;AACA,IAAMI,qBAAqBJ,QAAQ,sBAAR,CAA3B;;AAEA,IAAMK,kBAAkB,CACpB,KADoB,EAEpB,WAFoB,EAGpB,QAHoB,CAAxB;;AAMA;;;;;AAKA,SAASC,MAAT,CAAgBC,QAAhB,EAA0B;AACtB,QAAMC,QAAQP,MAAMQ,MAAN,CAAaP,QAAb,CAAd;AACA,WAAOM,MAAME,iBAAN,CAAwBH,QAAxB,CAAP;AACH;;AAED;;;;;AAKA,SAASI,UAAT,CAAoBC,IAApB,EAA0B;AACtB,QAAMJ,QAAQP,MAAMQ,MAAN,CAAaP,QAAb,CAAd;AACA,WAAOM,MAAMK,qBAAN,CAA4BD,IAA5B,CAAP;AACH;;AAED;;;;;AAKA,SAASE,OAAT,CAAiBF,IAAjB,EAAuB;AACnB,QAAIG,MAAMJ,WAAWC,IAAX,CAAV;AACAG,UAAMX,mBAAmBW,GAAnB,CAAN;AACA,WAAOT,OAAOS,GAAP,CAAP;AACH;;AAED;;;;;AAKA,SAASC,MAAT,CAAgBJ,IAAhB,EAAsB;AAClB,QAAML,WAAWI,WAAWC,IAAX,CAAjB;AACA,QAAMJ,QAAQP,MAAMQ,MAAN,CAAaN,IAAb,CAAd;;AAEA,WAAOK,MAAME,iBAAN,CAAwBH,QAAxB,CAAP;AACH;;AAED;;;;;AAKA,SAASU,YAAT,CAAsBL,IAAtB,EAA4B;AACxB,QAAML,WAAWI,WAAWC,IAAX,CAAjB;AACA,QAAMJ,QAAQP,MAAMQ,MAAN,CAAaN,IAAb,CAAd;;AAEA,WAAOK,MAAME,iBAAN,CAAwBH,QAAxB,CAAP;AACH;;AAEDW,OAAOC,OAAP,GAAiB;AACbC,UAAM,UADO;AAEbf,oCAFa;AAGbS,oBAHa;AAIbR,kBAJa;AAKbK,0BALa;AAMbK,kBANa;AAObC;AAPa,CAAjB","file":"markdown.js","sourcesContent":["const { State } = require('markup-it');\nconst markdown = require('markup-it/lib/markdown');\nconst html = require('markup-it/lib/html');\nconst annotateCodeBlocks = require('./annotateCodeBlocks');\n\nconst FILE_EXTENSIONS = [\n    '.md',\n    '.markdown',\n    '.mdown'\n];\n\n/**\n * Render a document as markdown.\n * @param  {Document} document\n * @return {String} text\n */\nfunction toText(document) {\n    const state = State.create(markdown);\n    return state.serializeDocument(document);\n}\n\n/**\n * Parse markdown into a document.\n * @param  {String} text\n * @return {Document} document\n */\nfunction toDocument(text) {\n    const state = State.create(markdown);\n    return state.deserializeToDocument(text);\n}\n\n/**\n * Prepare a document for parsing\n * @param  {String} text\n * @return {String} text\n */\nfunction prepare(text) {\n    let doc = toDocument(text);\n    doc = annotateCodeBlocks(doc);\n    return toText(doc);\n}\n\n/**\n * Render markdown to HTML.\n * @param  {String} text\n * @return {String} html\n */\nfunction toHTML(text) {\n    const document = toDocument(text);\n    const state = State.create(html);\n\n    return state.serializeDocument(document);\n}\n\n/**\n * Render markdown to inline HTML.\n * @param  {String} text\n * @return {String} html\n */\nfunction toInlineHTML(text) {\n    const document = toDocument(text);\n    const state = State.create(html);\n\n    return state.serializeDocument(document);\n}\n\nmodule.exports = {\n    name: 'markdown',\n    FILE_EXTENSIONS,\n    prepare,\n    toText,\n    toDocument,\n    toHTML,\n    toInlineHTML\n};\n"]}