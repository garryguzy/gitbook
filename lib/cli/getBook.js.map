{"version":3,"sources":["../../src/cli/getBook.js"],"names":["path","require","Book","createNodeFS","getBook","args","kwargs","input","resolve","process","cwd","logLevel","log","fs","book","createForFS","setLogLevel","module","exports"],"mappings":";;AAAA,IAAMA,OAAOC,QAAQ,MAAR,CAAb;AACA,IAAMC,OAAOD,QAAQ,gBAAR,CAAb;AACA,IAAME,eAAeF,QAAQ,YAAR,CAArB;;AAEA;;;;;;;;AAQA,SAASG,OAAT,CAAiBC,IAAjB,EAAuBC,MAAvB,EAA+B;AAC3B,QAAMC,QAAQP,KAAKQ,OAAL,CAAaH,KAAK,CAAL,KAAWI,QAAQC,GAAR,EAAxB,CAAd;AACA,QAAMC,WAAWL,OAAOM,GAAxB;;AAEA,QAAMC,KAAKV,aAAaI,KAAb,CAAX;AACA,QAAMO,OAAOZ,KAAKa,WAAL,CAAiBF,EAAjB,CAAb;;AAEA,WAAOC,KAAKE,WAAL,CAAiBL,QAAjB,CAAP;AACH;;AAEDM,OAAOC,OAAP,GAAiBd,OAAjB","file":"getBook.js","sourcesContent":["const path = require('path');\nconst Book = require('../models/book');\nconst createNodeFS = require('../fs/node');\n\n/**\n    Return a book instance to work on from\n    command line args/kwargs\n\n    @param {Array} args\n    @param {Object} kwargs\n    @return {Book}\n*/\nfunction getBook(args, kwargs) {\n    const input = path.resolve(args[0] || process.cwd());\n    const logLevel = kwargs.log;\n\n    const fs = createNodeFS(input);\n    const book = Book.createForFS(fs);\n\n    return book.setLogLevel(logLevel);\n}\n\nmodule.exports = getBook;\n"]}