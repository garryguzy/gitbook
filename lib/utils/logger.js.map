{"version":3,"sources":["../../src/utils/logger.js"],"names":["is","require","util","color","Immutable","LEVELS","Map","DEBUG","INFO","WARN","ERROR","DISABLED","COLORS","purple","cyan","yellow","red","Logger","write","logLevel","_write","msg","process","stdout","lastChar","setLevel","forEach","level","levelKey","toLowerCase","log","bind","ln","logLn","ok","fail","promise","prototype","string","toUpperCase","get","getLevel","toString","length","format","writeLn","findKey","v","args","push","green","trim","replace","p","that","then","st","err","module","exports"],"mappings":"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","file":"logger.js","sourcesContent":["const is = require('is');\nconst util = require('util');\nconst color = require('bash-color');\nconst Immutable = require('immutable');\n\nconst LEVELS = Immutable.Map({\n    DEBUG: 0,\n    INFO: 1,\n    WARN: 2,\n    ERROR: 3,\n    DISABLED: 10\n});\n\nconst COLORS = Immutable.Map({\n    DEBUG: color.purple,\n    INFO: color.cyan,\n    WARN: color.yellow,\n    ERROR: color.red\n});\n\nfunction Logger(write, logLevel) {\n    if (!(this instanceof Logger)) return new Logger(write, logLevel);\n\n    this._write = write || function(msg) {\n        if (process.stdout) {\n            process.stdout.write(msg);\n        }\n    };\n    this.lastChar = '\\n';\n\n    this.setLevel(logLevel || 'info');\n\n    // Create easy-to-use method like \"logger.debug.ln('....')\"\n    LEVELS.forEach(function(level, levelKey) {\n        if (levelKey === 'DISABLED') {\n            return;\n        }\n        levelKey = levelKey.toLowerCase();\n\n        this[levelKey] =            this.log.bind(this, level);\n        this[levelKey].ln =         this.logLn.bind(this, level);\n        this[levelKey].ok =         this.ok.bind(this, level);\n        this[levelKey].fail =       this.fail.bind(this, level);\n        this[levelKey].promise =    this.promise.bind(this, level);\n    }, this);\n}\n\n/**\n    Change minimum level\n\n    @param {String} logLevel\n*/\nLogger.prototype.setLevel = function(logLevel) {\n    if (is.string(logLevel)) {\n        logLevel = logLevel.toUpperCase();\n        logLevel = LEVELS.get(logLevel);\n    }\n\n    this.logLevel = logLevel;\n};\n\n/**\n    Return minimum logging level\n\n    @return {Number}\n*/\nLogger.prototype.getLevel = function(logLevel) {\n    return this.logLevel;\n};\n\n/**\n    Print a simple string\n\n    @param {String}\n*/\nLogger.prototype.write = function(msg) {\n    msg = msg.toString();\n    this.lastChar = msg[msg.length - 1];\n    return this._write(msg);\n};\n\n/**\n    Format a string using the first argument as a printf-like format.\n*/\nLogger.prototype.format = function(...args) {\n    return util.format(...args);\n};\n\n/**\n    Print a line\n\n    @param {String}\n*/\nLogger.prototype.writeLn = function(msg) {\n    return this.write((msg || '') + '\\n');\n};\n\n/**\n    Log/Print a message if level is allowed\n\n    @param {Number} level\n*/\nLogger.prototype.log = function(level, ...args) {\n    if (level < this.logLevel) return;\n\n    const levelKey = LEVELS.findKey((v) => {\n        return v === level;\n    });\n    let msg = this.format(...args);\n\n    if (this.lastChar == '\\n') {\n        msg = COLORS.get(levelKey)(levelKey.toLowerCase() + ':') + ' ' + msg;\n    }\n\n    return this.write(msg);\n};\n\n/**\n    Log/Print a line if level is allowed\n*/\nLogger.prototype.logLn = function(...args) {\n    if (this.lastChar != '\\n') this.write('\\n');\n\n    args.push('\\n');\n    return this.log(...args);\n};\n\n/**\n    Log a confirmation [OK]\n*/\nLogger.prototype.ok = function(level, ...args) {\n    const msg = this.format(...args);\n\n    if (args.length > 0) {\n        this.logLn(level, color.green('>> ') + msg.trim().replace(/\\n/g, color.green('\\n>> ')));\n    } else {\n        this.log(level, color.green('OK'), '\\n');\n    }\n};\n\n/**\n    Log a \"FAIL\"\n*/\nLogger.prototype.fail = function(level) {\n    return this.log(level, color.red('ERROR') + '\\n');\n};\n\n/**\n    Log state of a promise\n\n    @param {Number} level\n    @param {Promise}\n    @return {Promise}\n*/\nLogger.prototype.promise = function(level, p) {\n    const that = this;\n\n    return p\n    .then((st) => {\n        that.ok(level);\n        return st;\n    }, (err) => {\n        that.fail(level);\n        throw err;\n    });\n};\n\nLogger.LEVELS = LEVELS;\n\nmodule.exports =  Logger;\n"]}