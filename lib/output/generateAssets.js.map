{"version":3,"sources":["../../src/output/generateAssets.js"],"names":["Promise","require","generateAssets","generator","output","assets","getAssets","logger","getLogger","onAsset","reduce","out","assetFile","debug","ln","module","exports"],"mappings":";;AAAA,IAAMA,UAAUC,QAAQ,kBAAR,CAAhB;;AAEA;;;;;;;AAOA,SAASC,cAAT,CAAwBC,SAAxB,EAAmCC,MAAnC,EAA2C;AACvC,QAAMC,SAASD,OAAOE,SAAP,EAAf;AACA,QAAMC,SAASH,OAAOI,SAAP,EAAf;;AAEA;AACA,QAAI,CAACL,UAAUM,OAAf,EAAwB;AACpB,eAAOT,QAAQI,MAAR,CAAP;AACH;;AAED,WAAOJ,QAAQU,MAAR,CAAeL,MAAf,EAAuB,UAACM,GAAD,EAAMC,SAAN,EAAoB;AAC9CL,eAAOM,KAAP,CAAaC,EAAb,CAAgB,iBAAiBF,SAAjB,GAA6B,GAA7C;;AAEA,eAAOT,UAAUM,OAAV,CAAkBE,GAAlB,EAAuBC,SAAvB,CAAP;AACH,KAJM,EAIJR,MAJI,CAAP;AAKH;;AAEDW,OAAOC,OAAP,GAAiBd,cAAjB","file":"generateAssets.js","sourcesContent":["const Promise = require('../utils/promise');\n\n/**\n * Output all assets using a generator\n *\n * @param {Generator} generator\n * @param {Output} output\n * @return {Promise<Output>}\n */\nfunction generateAssets(generator, output) {\n    const assets = output.getAssets();\n    const logger = output.getLogger();\n\n    // Is generator ignoring assets?\n    if (!generator.onAsset) {\n        return Promise(output);\n    }\n\n    return Promise.reduce(assets, (out, assetFile) => {\n        logger.debug.ln('copy asset \"' + assetFile + '\"');\n\n        return generator.onAsset(out, assetFile);\n    }, output);\n}\n\nmodule.exports = generateAssets;\n"]}