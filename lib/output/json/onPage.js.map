{"version":3,"sources":["../../../src/output/json/onPage.js"],"names":["JSONUtils","require","PathUtils","Modifiers","writeFile","getModifiers","JSON_VERSION","onPage","output","page","file","getFile","readme","getBook","getReadme","modifyHTML","then","resultPage","json","encodeState","config","version","filePath","getPath","setExtension","JSON","stringify","module","exports"],"mappings":";;AAAA,IAAMA,YAAYC,QAAQ,YAAR,CAAlB;AACA,IAAMC,YAAYD,QAAQ,kBAAR,CAAlB;AACA,IAAME,YAAYF,QAAQ,cAAR,CAAlB;AACA,IAAMG,YAAYH,QAAQ,qBAAR,CAAlB;AACA,IAAMI,eAAeJ,QAAQ,iBAAR,CAArB;;AAEA,IAAMK,eAAe,GAArB;;AAEA;;;;;;AAMA,SAASC,MAAT,CAAgBC,MAAhB,EAAwBC,IAAxB,EAA8B;AAC1B,QAAMC,OAAOD,KAAKE,OAAL,EAAb;AACA,QAAMC,SAASJ,OAAOK,OAAP,GAAiBC,SAAjB,GAA6BH,OAA7B,EAAf;;AAEA,WAAOR,UAAUY,UAAV,CAAqBN,IAArB,EAA2BJ,aAAaG,MAAb,EAAqBC,IAArB,CAA3B,EACNO,IADM,CACD,UAACC,UAAD,EAAgB;AAClB;AACA,YAAMC,OAAOlB,UAAUmB,WAAV,CAAsBX,MAAtB,EAA8BS,UAA9B,CAAb;;AAEA;AACA,eAAOC,KAAKE,MAAZ;;AAEA;AACAF,aAAKG,OAAL,GAAef,YAAf;;AAEA;AACA,YAAIgB,WAAWZ,KAAKa,OAAL,MAAkBX,OAAOW,OAAP,EAAlB,GAAqC,aAArC,GAAqDb,KAAKa,OAAL,EAApE;AACAD,mBAAWpB,UAAUsB,YAAV,CAAuBF,QAAvB,EAAiC,OAAjC,CAAX;;AAEA;AACA,eAAOlB,UACHI,MADG,EAEHc,QAFG,EAGHG,KAAKC,SAAL,CAAeR,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAHG,CAAP;AAKH,KArBM,CAAP;AAsBH;;AAEDS,OAAOC,OAAP,GAAiBrB,MAAjB","file":"onPage.js","sourcesContent":["const JSONUtils = require('../../json');\nconst PathUtils = require('../../utils/path');\nconst Modifiers = require('../modifiers');\nconst writeFile = require('../helper/writeFile');\nconst getModifiers = require('../getModifiers');\n\nconst JSON_VERSION = '3';\n\n/**\n * Write a page as a json file\n *\n * @param {Output} output\n * @param {Page} page\n */\nfunction onPage(output, page) {\n    const file = page.getFile();\n    const readme = output.getBook().getReadme().getFile();\n\n    return Modifiers.modifyHTML(page, getModifiers(output, page))\n    .then((resultPage) => {\n        // Generate the JSON\n        const json = JSONUtils.encodeState(output, resultPage);\n\n        // Delete some private properties\n        delete json.config;\n\n        // Specify JSON output version\n        json.version = JSON_VERSION;\n\n        // File path in the output folder\n        let filePath = file.getPath() == readme.getPath() ? 'README.json' : file.getPath();\n        filePath = PathUtils.setExtension(filePath, '.json');\n\n        // Write it to the disk\n        return writeFile(\n            output,\n            filePath,\n            JSON.stringify(json, null, 4)\n        );\n    });\n}\n\nmodule.exports = onPage;\n"]}