{"version":3,"sources":["../../src/output/preparePages.js"],"names":["Parse","require","Promise","parseURIIndexFromPages","preparePages","output","book","getBook","logger","getLogger","readme","getReadme","isMultilingual","parsePagesList","then","pages","info","ln","size","urls","append","getFile","getPath","merge","module","exports"],"mappings":";;AAAA,IAAMA,QAAQC,QAAQ,UAAR,CAAd;AACA,IAAMC,UAAUD,QAAQ,kBAAR,CAAhB;AACA,IAAME,yBAAyBF,QAAQ,iCAAR,CAA/B;;AAEA;;;;;;AAMA,SAASG,YAAT,CAAsBC,MAAtB,EAA8B;AAC1B,QAAMC,OAAOD,OAAOE,OAAP,EAAb;AACA,QAAMC,SAASF,KAAKG,SAAL,EAAf;AACA,QAAMC,SAASJ,KAAKK,SAAL,EAAf;;AAEA,QAAIL,KAAKM,cAAL,EAAJ,EAA2B;AACvB,eAAOV,QAAQG,MAAR,CAAP;AACH;;AAED,WAAOL,MAAMa,cAAN,CAAqBP,IAArB,EACNQ,IADM,CACD,UAACC,KAAD,EAAW;AACbP,eAAOQ,IAAP,CAAYC,EAAZ,CAAe,OAAf,EAAwBF,MAAMG,IAA9B,EAAoC,OAApC;AACA,YAAIC,OAAOhB,uBAAuBY,KAAvB,CAAX;;AAEA;AACAI,eAAOA,KAAKC,MAAL,CAAYV,OAAOW,OAAP,GAAiBC,OAAjB,EAAZ,EAAwC,YAAxC,CAAP;;AAEA,eAAOjB,OAAOkB,KAAP,CAAa;AAChBR,wBADgB;AAEhBI;AAFgB,SAAb,CAAP;AAIH,KAZM,CAAP;AAaH;;AAEDK,OAAOC,OAAP,GAAiBrB,YAAjB","file":"preparePages.js","sourcesContent":["const Parse = require('../parse');\nconst Promise = require('../utils/promise');\nconst parseURIIndexFromPages = require('../parse/parseURIIndexFromPages');\n\n/**\n * List and parse all pages, then create the urls mapping.\n *\n * @param {Output}\n * @return {Promise<Output>}\n */\nfunction preparePages(output) {\n    const book = output.getBook();\n    const logger = book.getLogger();\n    const readme = book.getReadme();\n\n    if (book.isMultilingual()) {\n        return Promise(output);\n    }\n\n    return Parse.parsePagesList(book)\n    .then((pages) => {\n        logger.info.ln('found', pages.size, 'pages');\n        let urls = parseURIIndexFromPages(pages);\n\n        // Readme should always generate an index.html\n        urls = urls.append(readme.getFile().getPath(), 'index.html');\n\n        return output.merge({\n            pages,\n            urls\n        });\n    });\n}\n\nmodule.exports = preparePages;\n"]}