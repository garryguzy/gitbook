{"version":3,"sources":["../../src/output/createTemplateEngine.js"],"names":["Templating","require","TemplateEngine","Api","Plugins","defaultBlocks","defaultFilters","createTemplateEngine","output","git","plugins","getPlugins","book","getBook","rootFolder","getContentRoot","logger","getLogger","filters","listFilters","blocks","listBlocks","merge","transformFn","replaceShortcuts","bind","loader","ConrefsLoader","context","encodeGlobal","module","exports"],"mappings":";;AAAA,IAAMA,aAAaC,QAAQ,eAAR,CAAnB;AACA,IAAMC,iBAAiBD,QAAQ,0BAAR,CAAvB;;AAEA,IAAME,MAAMF,QAAQ,QAAR,CAAZ;AACA,IAAMG,UAAUH,QAAQ,YAAR,CAAhB;;AAEA,IAAMI,gBAAgBJ,QAAQ,4BAAR,CAAtB;AACA,IAAMK,iBAAiBL,QAAQ,6BAAR,CAAvB;;AAEA;;;;;;;;;AASA,SAASM,oBAAT,CAA8BC,MAA9B,EAAsC;AAAA,QAC1BC,GAD0B,GAClBD,MADkB,CAC1BC,GAD0B;;AAElC,QAAMC,UAAUF,OAAOG,UAAP,EAAhB;AACA,QAAMC,OAAOJ,OAAOK,OAAP,EAAb;AACA,QAAMC,aAAaF,KAAKG,cAAL,EAAnB;AACA,QAAMC,SAASJ,KAAKK,SAAL,EAAf;;AAEA,QAAIC,UAAUd,QAAQe,WAAR,CAAoBT,OAApB,CAAd;AACA,QAAIU,SAAShB,QAAQiB,UAAR,CAAmBX,OAAnB,CAAb;;AAEA;AACAU,aAASf,cAAciB,KAAd,CAAoBF,MAApB,CAAT;AACAF,cAAUZ,eAAegB,KAAf,CAAqBJ,OAArB,CAAV;;AAEA;AACA,QAAMK,cAAcvB,WAAWwB,gBAAX,CAA4BC,IAA5B,CAAiC,IAAjC,EAAuCL,MAAvC,CAApB;AACA,QAAMM,SAAS,IAAI1B,WAAW2B,aAAf,CAA6Bb,UAA7B,EAAyCS,WAAzC,EAAsDP,MAAtD,EAA8DP,GAA9D,CAAf;;AAEA;AACA,QAAMmB,UAAUzB,IAAI0B,YAAJ,CAAiBrB,MAAjB,CAAhB;;AAEA,WAAO,IAAIN,cAAJ,CAAmB;AACtBgB,wBADsB;AAEtBE,sBAFsB;AAGtBM,sBAHsB;AAItBE;AAJsB,KAAnB,CAAP;AAMH;;AAEDE,OAAOC,OAAP,GAAiBxB,oBAAjB","file":"createTemplateEngine.js","sourcesContent":["const Templating = require('../templating');\nconst TemplateEngine = require('../models/templateEngine');\n\nconst Api = require('../api');\nconst Plugins = require('../plugins');\n\nconst defaultBlocks = require('../constants/defaultBlocks');\nconst defaultFilters = require('../constants/defaultFilters');\n\n/**\n * Create template engine for an output.\n * It adds default filters/blocks, then add the ones from plugins.\n *\n * This template engine is used to compile pages.\n *\n * @param {Output} output\n * @return {TemplateEngine}\n */\nfunction createTemplateEngine(output) {\n    const { git } = output;\n    const plugins = output.getPlugins();\n    const book = output.getBook();\n    const rootFolder = book.getContentRoot();\n    const logger = book.getLogger();\n\n    let filters = Plugins.listFilters(plugins);\n    let blocks = Plugins.listBlocks(plugins);\n\n    // Extend with default\n    blocks = defaultBlocks.merge(blocks);\n    filters = defaultFilters.merge(filters);\n\n    // Create loader\n    const transformFn = Templating.replaceShortcuts.bind(null, blocks);\n    const loader = new Templating.ConrefsLoader(rootFolder, transformFn, logger, git);\n\n    // Create API context\n    const context = Api.encodeGlobal(output);\n\n    return new TemplateEngine({\n        filters,\n        blocks,\n        loader,\n        context\n    });\n}\n\nmodule.exports = createTemplateEngine;\n"]}