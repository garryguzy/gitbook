{"version":3,"sources":["../../../src/output/modifiers/svgToPng.js"],"names":["crc","require","path","imagesUtil","fs","LocationUtils","editHTMLElement","svgToPng","rootFolder","currentFile","$","currentDirectory","dirname","$img","src","attr","extname","toAbsolute","hash","crc32","toString","fileName","inputPath","join","filePath","assertFile","convertSVGToPNG","then","relative","module","exports"],"mappings":";;AAAA,IAAMA,MAAMC,QAAQ,KAAR,CAAZ;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;;AAEA,IAAME,aAAaF,QAAQ,oBAAR,CAAnB;AACA,IAAMG,KAAKH,QAAQ,gBAAR,CAAX;AACA,IAAMI,gBAAgBJ,QAAQ,sBAAR,CAAtB;;AAEA,IAAMK,kBAAkBL,QAAQ,mBAAR,CAAxB;;AAEA;;;;;;;AAOA,SAASM,QAAT,CAAkBC,UAAlB,EAA8BC,WAA9B,EAA2CC,CAA3C,EAA8C;AAC1C,QAAMC,mBAAmBT,KAAKU,OAAL,CAAaH,WAAb,CAAzB;;AAEA,WAAOH,gBAAgBI,CAAhB,EAAmB,KAAnB,EAA0B,UAACG,IAAD,EAAU;AACvC,YAAIC,MAAMD,KAAKE,IAAL,CAAU,KAAV,CAAV;AACA,YAAIb,KAAKc,OAAL,CAAaF,GAAb,MAAsB,MAA1B,EAAkC;AAC9B;AACH;;AAED;AACAA,cAAMT,cAAcY,UAAd,CAAyBH,GAAzB,EAA8BH,gBAA9B,EAAgD,GAAhD,CAAN;;AAEA;AACA,YAAMO,OAAOlB,IAAImB,KAAJ,CAAUL,GAAV,EAAeM,QAAf,CAAwB,EAAxB,CAAb;AACA,YAAIC,WAAWH,OAAO,MAAtB;;AAEA;AACA,YAAMI,YAAYpB,KAAKqB,IAAL,CAAUf,UAAV,EAAsBM,GAAtB,CAAlB;;AAEA;AACA,YAAMU,WAAWtB,KAAKqB,IAAL,CAAUf,UAAV,EAAsBa,QAAtB,CAAjB;;AAEA,eAAOjB,GAAGqB,UAAH,CAAcD,QAAd,EAAwB,YAAM;AACjC,mBAAOrB,WAAWuB,eAAX,CAA2BJ,SAA3B,EAAsCE,QAAtC,CAAP;AACH,SAFM,EAGNG,IAHM,CAGD,YAAM;AACR;AACAN,uBAAWhB,cAAcuB,QAAd,CAAuBjB,gBAAvB,EAAyCU,QAAzC,CAAX;;AAEA;AACAR,iBAAKE,IAAL,CAAU,KAAV,EAAiBM,QAAjB;AACH,SATM,CAAP;AAUH,KA7BM,CAAP;AA8BH;;AAGDQ,OAAOC,OAAP,GAAiBvB,QAAjB","file":"svgToPng.js","sourcesContent":["const crc = require('crc');\nconst path = require('path');\n\nconst imagesUtil = require('../../utils/images');\nconst fs = require('../../utils/fs');\nconst LocationUtils = require('../../utils/location');\n\nconst editHTMLElement = require('./editHTMLElement');\n\n/**\n    Convert all SVG images to PNG\n\n    @param {String} rootFolder\n    @param {HTMLDom} $\n    @return {Promise}\n*/\nfunction svgToPng(rootFolder, currentFile, $) {\n    const currentDirectory = path.dirname(currentFile);\n\n    return editHTMLElement($, 'img', ($img) => {\n        let src = $img.attr('src');\n        if (path.extname(src) !== '.svg') {\n            return;\n        }\n\n        // Calcul absolute path for this\n        src = LocationUtils.toAbsolute(src, currentDirectory, '.');\n\n        // We avoid generating twice the same PNG\n        const hash = crc.crc32(src).toString(16);\n        let fileName = hash + '.png';\n\n        // Input file path\n        const inputPath = path.join(rootFolder, src);\n\n        // Result file path\n        const filePath = path.join(rootFolder, fileName);\n\n        return fs.assertFile(filePath, () => {\n            return imagesUtil.convertSVGToPNG(inputPath, filePath);\n        })\n        .then(() => {\n            // Convert filename to a relative filename\n            fileName = LocationUtils.relative(currentDirectory, fileName);\n\n            // Replace src\n            $img.attr('src', fileName);\n        });\n    });\n}\n\n\nmodule.exports = svgToPng;\n"]}