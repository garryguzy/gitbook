{"version":3,"sources":["../../src/output/index.js"],"names":["Immutable","require","generators","List","getGenerator","name","find","generator","module","exports","generate"],"mappings":";;AAAA,IAAMA,YAAYC,QAAQ,WAAR,CAAlB;;AAEA,IAAMC,aAAaF,UAAUG,IAAV,CAAe,CAC9BF,QAAQ,QAAR,CAD8B,EAE9BA,QAAQ,WAAR,CAF8B,EAG9BA,QAAQ,SAAR,CAH8B,CAAf,CAAnB;;AAMA;;;;;;AAMA,SAASG,YAAT,CAAsBC,IAAtB,EAA4B;AACxB,WAAOH,WAAWI,IAAX,CAAgB,UAACC,SAAD,EAAe;AAClC,eAAOA,UAAUF,IAAV,IAAkBA,IAAzB;AACH,KAFM,CAAP;AAGH;;AAEDG,OAAOC,OAAP,GAAiB;AACbC,cAAoBT,QAAQ,gBAAR,CADP;AAEbG;AAFa,CAAjB","file":"index.js","sourcesContent":["const Immutable = require('immutable');\n\nconst generators = Immutable.List([\n    require('./json'),\n    require('./website'),\n    require('./ebook')\n]);\n\n/**\n    Return a specific generator by its name\n\n    @param {String}\n    @return {Generator}\n*/\nfunction getGenerator(name) {\n    return generators.find((generator) => {\n        return generator.name == name;\n    });\n}\n\nmodule.exports = {\n    generate:           require('./generateBook'),\n    getGenerator\n};\n"]}