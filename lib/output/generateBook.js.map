{"version":3,"sources":["../../src/output/generateBook.js"],"names":["path","require","Immutable","Output","Promise","fs","callHook","preparePlugins","preparePages","prepareAssets","generateAssets","generatePages","processOutput","generator","startOutput","then","bind","output","book","getBook","config","getConfig","values","getValues","toJS","result","updateValues","set","onInit","tap","isMultilingual","logger","getLogger","books","getBooks","outputRoot","getRoot","plugins","getPlugins","state","getState","options","getOptions","forEach","langBook","langOptions","join","getLanguage","langOutput","name","info","ln","onFinish","generateBook","Options","State","Map","start","Date","now","rootFolder","debug","ensureFolder","thenResolve","end","duration","ok","toFixed","module","exports"],"mappings":"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","file":"generateBook.js","sourcesContent":["const path = require('path');\nconst Immutable = require('immutable');\n\nconst Output = require('../models/output');\nconst Promise = require('../utils/promise');\nconst fs = require('../utils/fs');\n\nconst callHook = require('./callHook');\nconst preparePlugins = require('./preparePlugins');\nconst preparePages = require('./preparePages');\nconst prepareAssets = require('./prepareAssets');\nconst generateAssets = require('./generateAssets');\nconst generatePages = require('./generatePages');\n\n/**\n * Process an output to generate the book\n *\n * @param {Generator} generator\n * @param {Output} output\n * @return {Promise<Output>}\n */\nfunction processOutput(generator, startOutput) {\n    return Promise(startOutput)\n    .then(preparePlugins)\n    .then(preparePages)\n    .then(prepareAssets)\n\n    .then(\n        callHook.bind(null,\n            'config',\n            (output) => {\n                const book = output.getBook();\n                const config = book.getConfig();\n                const values = config.getValues();\n\n                return values.toJS();\n            },\n            (output, result) => {\n                let book = output.getBook();\n                let config = book.getConfig();\n\n                config = config.updateValues(result);\n                book = book.set('config', config);\n                return output.set('book', book);\n            }\n        )\n    )\n\n    .then(\n        callHook.bind(null,\n            'init',\n            (output) => {\n                return {};\n            },\n            (output) => {\n                return output;\n            }\n        )\n    )\n\n    .then((output) => {\n        if (!generator.onInit) {\n            return output;\n        }\n\n        return generator.onInit(output);\n    })\n\n    .then(generateAssets.bind(null, generator))\n    .then(generatePages.bind(null, generator))\n\n    .tap((output) => {\n        const book = output.getBook();\n\n        if (!book.isMultilingual()) {\n            return;\n        }\n\n        const logger = book.getLogger();\n        const books = book.getBooks();\n        const outputRoot = output.getRoot();\n        const plugins = output.getPlugins();\n        const state = output.getState();\n        const options = output.getOptions();\n\n        return Promise.forEach(books, (langBook) => {\n            // Inherits plugins list, options and state\n            const langOptions = options.set('root', path.join(outputRoot, langBook.getLanguage()));\n            const langOutput = new Output({\n                book:       langBook,\n                options:    langOptions,\n                state,\n                generator:  generator.name,\n                plugins\n            });\n\n            logger.info.ln('');\n            logger.info.ln('generating language \"' + langBook.getLanguage() + '\"');\n            return processOutput(generator, langOutput);\n        });\n    })\n\n    .then(callHook.bind(null,\n        'finish:before',\n            (output) => {\n                return {};\n            },\n            (output) => {\n                return output;\n            }\n        )\n    )\n\n    .then((output) => {\n        if (!generator.onFinish) {\n            return output;\n        }\n\n        return generator.onFinish(output);\n    })\n\n    .then(callHook.bind(null,\n        'finish',\n            (output) => {\n                return {};\n            },\n            (output) => {\n                return output;\n            }\n        )\n    );\n}\n\n/**\n * Generate a book using a generator.\n *\n * The overall process is:\n *     1. List and load plugins for this book\n *     2. Call hook \"config\"\n *     3. Call hook \"init\"\n *     4. Initialize generator\n *     5. List all assets and pages\n *     6. Copy all assets to output\n *     7. Generate all pages\n *     8. Call hook \"finish:before\"\n *     9. Finish generation\n *     10. Call hook \"finish\"\n *\n *\n * @param {Generator} generator\n * @param {Book} book\n * @param {Object} options\n * @return {Promise<Output>}\n */\nfunction generateBook(generator, book, options) {\n    options = generator.Options(options);\n    const state = generator.State ? generator.State({}) : Immutable.Map();\n    const start = Date.now();\n\n    return Promise(\n        new Output({\n            book,\n            options,\n            state,\n            generator: generator.name\n        })\n    )\n\n    // Cleanup output folder\n    .then((output) => {\n        const logger = output.getLogger();\n        const rootFolder = output.getRoot();\n\n        logger.debug.ln('cleanup folder \"' + rootFolder + '\"');\n        return fs.ensureFolder(rootFolder)\n            .thenResolve(output);\n    })\n\n    .then(output => processOutput(generator, output))\n\n    // Log duration and end message\n    .then((output) => {\n        const logger = output.getLogger();\n        const end = Date.now();\n        const duration = (end - start) / 1000;\n\n        logger.info.ok('generation finished with success in ' + duration.toFixed(1) + 's !');\n\n        return output;\n    });\n}\n\nmodule.exports = generateBook;\n"]}