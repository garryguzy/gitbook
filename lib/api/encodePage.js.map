{"version":3,"sources":["../../src/api/encodePage.js"],"names":["JSONUtils","require","deprecate","encodeProgress","encodePage","output","page","book","getBook","urls","getURLIndex","summary","getSummary","fs","getContentFS","file","getFile","result","type","getType","path","getPath","rawPath","resolve","setAttribute","key","value","attributes","field","content","module","exports"],"mappings":";;AAAA,IAAMA,YAAYC,QAAQ,SAAR,CAAlB;AACA,IAAMC,YAAYD,QAAQ,aAAR,CAAlB;AACA,IAAME,iBAAiBF,QAAQ,kBAAR,CAAvB;;AAEA;;;;;;;AAOA,SAASG,UAAT,CAAoBC,MAApB,EAA4BC,IAA5B,EAAkC;AAC9B,QAAMC,OAAOF,OAAOG,OAAP,EAAb;AACA,QAAMC,OAAOJ,OAAOK,WAAP,EAAb;AACA,QAAMC,UAAUJ,KAAKK,UAAL,EAAhB;AACA,QAAMC,KAAKN,KAAKO,YAAL,EAAX;AACA,QAAMC,OAAOT,KAAKU,OAAL,EAAb;;AAEA;AACA,QAAMC,SAASjB,UAAUI,UAAV,CAAqBE,IAArB,EAA2BK,OAA3B,EAAoCF,IAApC,CAAf;;AAEAQ,WAAOC,IAAP,GAAcH,KAAKI,OAAL,EAAd;AACAF,WAAOG,IAAP,GAAcL,KAAKM,OAAL,EAAd;AACAJ,WAAOK,OAAP,GAAiBT,GAAGU,OAAH,CAAWN,OAAOG,IAAlB,CAAjB;;AAEAH,WAAOO,YAAP,GAAsB,UAACC,GAAD,EAAMC,KAAN,EAAgB;AAClCT,eAAOU,UAAP,CAAkBF,GAAlB,IAAyBC,KAAzB;AACA,eAAOT,MAAP;AACH,KAHD;;AAKAf,cAAU0B,KAAV,CAAgBvB,MAAhB,EAAwB,eAAxB,EAAyCY,MAAzC,EAAiD,UAAjD,EAA6D,YAAM;AAC/D,eAAOd,eAAeE,MAAf,EAAuBC,IAAvB,CAAP;AACH,KAFD,EAEG,wCAFH;;AAIAJ,cAAU0B,KAAV,CAAgBvB,MAAhB,EAAwB,eAAxB,EAAyCY,MAAzC,EAAiD,UAAjD,EAA6D,CACzD;AACIY,iBAASZ,OAAOY,OADpB;AAEIX,cAAM;AAFV,KADyD,CAA7D,EAKG,6DALH;;AAOA,WAAOD,MAAP;AACH;;AAEDa,OAAOC,OAAP,GAAiB3B,UAAjB","file":"encodePage.js","sourcesContent":["const JSONUtils = require('../json');\nconst deprecate = require('./deprecate');\nconst encodeProgress = require('./encodeProgress');\n\n/**\n * Encode a page in a context to a JS API\n *\n * @param {Output} output\n * @param {Page} page\n * @return {Object}\n */\nfunction encodePage(output, page) {\n    const book = output.getBook();\n    const urls = output.getURLIndex();\n    const summary = book.getSummary();\n    const fs = book.getContentFS();\n    const file = page.getFile();\n\n    // JS Page is based on the JSON output\n    const result = JSONUtils.encodePage(page, summary, urls);\n\n    result.type = file.getType();\n    result.path = file.getPath();\n    result.rawPath = fs.resolve(result.path);\n\n    result.setAttribute = (key, value) => {\n        result.attributes[key] = value;\n        return result;\n    };\n\n    deprecate.field(output, 'page.progress', result, 'progress', () => {\n        return encodeProgress(output, page);\n    }, '\"page.progress\" property is deprecated');\n\n    deprecate.field(output, 'page.sections', result, 'sections', [\n        {\n            content: result.content,\n            type: 'normal'\n        }\n    ], '\"sections\" property is deprecated, use page.content instead');\n\n    return result;\n}\n\nmodule.exports = encodePage;\n"]}