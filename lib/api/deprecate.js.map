{"version":3,"sources":["../../src/api/deprecate.js"],"names":["is","require","objectPath","logged","disabled","logNotice","book","key","message","logger","getLogger","warn","ln","deprecateMethod","fn","msg","args","apply","deprecateField","instance","property","value","store","undefined","prepare","getter","setter","v","Object","defineProperty","get","set","enumerable","configurable","enableDeprecation","disableDeprecation","deprecateRenamedMethod","oldName","newName","module","exports","method","renamedMethod","field","enable","disable"],"mappings":";;AAAA,IAAMA,KAAKC,QAAQ,IAAR,CAAX;AACA,IAAMC,aAAaD,QAAQ,aAAR,CAAnB;;AAEA,IAAME,SAAS,EAAf;AACA,IAAMC,WAAW,EAAjB;;AAEA;;;;;;;AAOA,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,GAAzB,EAA8BC,OAA9B,EAAuC;AACnC,QAAIL,OAAOI,GAAP,KAAeH,SAASG,GAAT,CAAnB,EAAkC;;AAElCJ,WAAOI,GAAP,IAAc,IAAd;;AAEA,QAAME,SAASH,KAAKI,SAAL,EAAf;AACAD,WAAOE,IAAP,CAAYC,EAAZ,CAAeJ,OAAf;AACH;;AAED;;;;;;;;;AASA,SAASK,eAAT,CAAyBP,IAAzB,EAA+BC,GAA/B,EAAoCO,EAApC,EAAwCC,GAAxC,EAA6C;AACzC,WAAO,YAAkB;AACrBV,kBAAUC,IAAV,EAAgBC,GAAhB,EAAqBQ,GAArB;;AADqB,0CAANC,IAAM;AAANA,gBAAM;AAAA;;AAErB,eAAOF,GAAGG,KAAH,CAAS,IAAT,EAAeD,IAAf,CAAP;AACH,KAHD;AAIH;;AAED;;;;;;;;;;AAUA,SAASE,cAAT,CAAwBZ,IAAxB,EAA8BC,GAA9B,EAAmCY,QAAnC,EAA6CC,QAA7C,EAAuDC,KAAvD,EAA8DN,GAA9D,EAAmE;AAC/D,QAAIO,QAAQC,SAAZ;;AAEA,QAAMC,UAAU,SAAVA,OAAU,GAAM;AAClB,YAAI,CAACxB,GAAGuB,SAAH,CAAaD,KAAb,CAAL,EAA0B;;AAE1B,YAAItB,GAAGc,EAAH,CAAMO,KAAN,CAAJ,EAAkBC,QAAQD,OAAR,CAAlB,KACKC,QAAQD,KAAR;AACR,KALD;;AAOA,QAAMI,SAAS,SAATA,MAAS,GAAM;AACjBD;;AAEAnB,kBAAUC,IAAV,EAAgBC,GAAhB,EAAqBQ,GAArB;AACA,eAAOO,KAAP;AACH,KALD;;AAOA,QAAMI,SAAS,SAATA,MAAS,CAACC,CAAD,EAAO;AAClBH;;AAEAnB,kBAAUC,IAAV,EAAgBC,GAAhB,EAAqBQ,GAArB;AACAO,gBAAQK,CAAR;AACA,eAAOL,KAAP;AACH,KAND;;AAQAM,WAAOC,cAAP,CAAsBV,QAAtB,EAAgCC,QAAhC,EAA0C;AACtCU,aAAKL,MADiC;AAEtCM,aAAKL,MAFiC;AAGtCM,oBAAY,KAH0B;AAItCC,sBAAc;AAJwB,KAA1C;AAMH;;AAED;;;;AAIA,SAASC,iBAAT,CAA2B3B,GAA3B,EAAgC;AAC5BH,aAASG,GAAT,IAAgB,KAAhB;AACH;;AAED;;;;AAIA,SAAS4B,kBAAT,CAA4B5B,GAA5B,EAAiC;AAC7BH,aAASG,GAAT,IAAgB,IAAhB;AACH;;AAED;;;;;;;;;AASA,SAAS6B,sBAAT,CAAgC9B,IAAhC,EAAsCC,GAAtC,EAA2CY,QAA3C,EAAqDkB,OAArD,EAA8DC,OAA9D,EAAuEvB,GAAvE,EAA4E;AACxEA,UAAMA,OAAQ,MAAMsB,OAAN,GAAgB,wBAAhB,GAA2CC,OAA3C,GAAqD,aAAnE;AACA,QAAMxB,KAAKZ,WAAW4B,GAAX,CAAeX,QAAf,EAAyBmB,OAAzB,CAAX;;AAEAnB,aAASkB,OAAT,IAAoBxB,gBAAgBP,IAAhB,EAAsBC,GAAtB,EAA2BO,EAA3B,EAA+BC,GAA/B,CAApB;AACH;;AAEDwB,OAAOC,OAAP,GAAiB;AACbC,YAAQ5B,eADK;AAEb6B,mBAAeN,sBAFF;AAGbO,WAAOzB,cAHM;AAIb0B,YAAQV,iBAJK;AAKbW,aAASV;AALI,CAAjB","file":"deprecate.js","sourcesContent":["const is = require('is');\nconst objectPath = require('object-path');\n\nconst logged = {};\nconst disabled = {};\n\n/**\n * Log a deprecated notice\n *\n * @param {Book|Output} book\n * @param {String} key\n * @param {String} message\n */\nfunction logNotice(book, key, message) {\n    if (logged[key] || disabled[key]) return;\n\n    logged[key] = true;\n\n    const logger = book.getLogger();\n    logger.warn.ln(message);\n}\n\n/**\n * Deprecate a function\n *\n * @param {Book|Output} book\n * @param {String} key: unique identitifer for the deprecated\n * @param {Function} fn\n * @param {String} msg: message to print when called\n * @return {Function}\n */\nfunction deprecateMethod(book, key, fn, msg) {\n    return function(...args) {\n        logNotice(book, key, msg);\n        return fn.apply(this, args);\n    };\n}\n\n/**\n * Deprecate a property of an object\n *\n * @param {Book|Output} book\n * @param {String} key: unique identitifer for the deprecated\n * @param {Object} instance\n * @param {String|Function} property\n * @param {String} msg: message to print when called\n * @return {Function}\n */\nfunction deprecateField(book, key, instance, property, value, msg) {\n    let store = undefined;\n\n    const prepare = () => {\n        if (!is.undefined(store)) return;\n\n        if (is.fn(value)) store = value();\n        else store = value;\n    };\n\n    const getter = () => {\n        prepare();\n\n        logNotice(book, key, msg);\n        return store;\n    };\n\n    const setter = (v) => {\n        prepare();\n\n        logNotice(book, key, msg);\n        store = v;\n        return store;\n    };\n\n    Object.defineProperty(instance, property, {\n        get: getter,\n        set: setter,\n        enumerable: false,\n        configurable: true\n    });\n}\n\n/**\n * Enable a deprecation\n * @param {String} key: unique identitifer\n */\nfunction enableDeprecation(key) {\n    disabled[key] = false;\n}\n\n/**\n * Disable a deprecation\n * @param {String} key: unique identitifer\n */\nfunction disableDeprecation(key) {\n    disabled[key] = true;\n}\n\n/**\n * Deprecate a method in favor of another one.\n *\n * @param {Book} book\n * @param {String} key\n * @param {Object} instance\n * @param {String} oldName\n * @param {String} newName\n */\nfunction deprecateRenamedMethod(book, key, instance, oldName, newName, msg) {\n    msg = msg || ('\"' + oldName + '\" is deprecated, use \"' + newName + '()\" instead');\n    const fn = objectPath.get(instance, newName);\n\n    instance[oldName] = deprecateMethod(book, key, fn, msg);\n}\n\nmodule.exports = {\n    method: deprecateMethod,\n    renamedMethod: deprecateRenamedMethod,\n    field: deprecateField,\n    enable: enableDeprecation,\n    disable: disableDeprecation\n};\n"]}