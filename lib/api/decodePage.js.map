{"version":3,"sources":["../../src/api/decodePage.js"],"names":["Immutable","require","decodePage","output","page","result","originalContent","getContent","newAttributes","fromJS","attributes","set","content","module","exports"],"mappings":";;AAAA,IAAMA,YAAYC,QAAQ,WAAR,CAAlB;;AAEA;;;;;;;;;AASA,SAASC,UAAT,CAAoBC,MAApB,EAA4BC,IAA5B,EAAkCC,MAAlC,EAA0C;AACtC,QAAMC,kBAAkBF,KAAKG,UAAL,EAAxB;;AAEA;AACA;AACA,QAAI,CAACF,MAAL,EAAa;AACT,eAAOD,IAAP;AACH;;AAED;AACA,QAAMI,gBAAgBR,UAAUS,MAAV,CAAiBJ,OAAOK,UAAxB,CAAtB;AACAN,WAAOA,KAAKO,GAAL,CAAS,YAAT,EAAuBH,aAAvB,CAAP;;AAEA;AACA;AACA,QAAIH,OAAOO,OAAP,IAAkBN,eAAtB,EAAuC;AACnCF,eAAOA,KAAKO,GAAL,CAAS,SAAT,EAAoBN,OAAOO,OAA3B,CAAP;AACH;;AAED,WAAOR,IAAP;AACH;;AAEDS,OAAOC,OAAP,GAAiBZ,UAAjB","file":"decodePage.js","sourcesContent":["const Immutable = require('immutable');\n\n/**\n * Decode changes from a JS API to a page object.\n * Only the content can be edited by plugin's hooks.\n *\n * @param {Output} output\n * @param {Page} page: page instance to edit\n * @param {Object} result: result from API\n * @return {Page}\n */\nfunction decodePage(output, page, result) {\n    const originalContent = page.getContent();\n\n    // No returned value\n    // Existing content will be used\n    if (!result) {\n        return page;\n    }\n\n    // Update page attributes\n    const newAttributes = Immutable.fromJS(result.attributes);\n    page = page.set('attributes', newAttributes);\n\n    // GitBook 3\n    // Use returned page.content if different from original content\n    if (result.content != originalContent) {\n        page = page.set('content', result.content);\n    }\n\n    return page;\n}\n\nmodule.exports = decodePage;\n"]}