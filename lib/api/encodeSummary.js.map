{"version":3,"sources":["../../src/api/encodeSummary.js"],"names":["encodeSummaryArticle","require","encodeSummary","output","summary","result","walk","iter","getArticle","article","jsonArticle","getArticleByLevel","level","getByLevel","undefined","getArticleByPath","getByPath","module","exports"],"mappings":";;AAAA,IAAMA,uBAAuBC,QAAQ,8BAAR,CAA7B;;AAEA;;;;;;;AAOA,SAASC,aAAT,CAAuBC,MAAvB,EAA+BC,OAA/B,EAAwC;AACpC,QAAMC,SAAS;;AAEX;;;;AAKAC,YAPW,gBAONC,IAPM,EAOA;AACPH,oBAAQI,UAAR,CAAmB,UAACC,OAAD,EAAa;AAC5B,oBAAMC,cAAcV,qBAAqBS,OAArB,EAA8B,KAA9B,CAApB;;AAEA,uBAAOF,KAAKG,WAAL,CAAP;AACH,aAJD;AAKH,SAbU;;;AAeX;;;;;AAMAC,yBArBW,6BAqBOC,KArBP,EAqBc;AACrB,gBAAMH,UAAUL,QAAQS,UAAR,CAAmBD,KAAnB,CAAhB;AACA,mBAAQH,UAAUT,qBAAqBS,OAArB,CAAV,GAA0CK,SAAlD;AACH,SAxBU;;;AA0BX;;;;;AAMAC,wBAhCW,4BAgCMH,KAhCN,EAgCa;AACpB,gBAAMH,UAAUL,QAAQY,SAAR,CAAkBJ,KAAlB,CAAhB;AACA,mBAAQH,UAAUT,qBAAqBS,OAArB,CAAV,GAA0CK,SAAlD;AACH;AAnCU,KAAf;;AAsCA,WAAOT,MAAP;AACH;;AAEDY,OAAOC,OAAP,GAAiBhB,aAAjB","file":"encodeSummary.js","sourcesContent":["const encodeSummaryArticle = require('../json/encodeSummaryArticle');\n\n/**\n    Encode summary to provide an API to plugin\n\n    @param {Output} output\n    @param {Config} config\n    @return {Object}\n*/\nfunction encodeSummary(output, summary) {\n    const result = {\n\n        /**\n            Iterate over the summary, it stops when the \"iter\" returns false\n\n            @param {Function} iter\n        */\n        walk(iter) {\n            summary.getArticle((article) => {\n                const jsonArticle = encodeSummaryArticle(article, false);\n\n                return iter(jsonArticle);\n            });\n        },\n\n        /**\n            Get an article by its level\n\n            @param {String} level\n            @return {Object}\n        */\n        getArticleByLevel(level) {\n            const article = summary.getByLevel(level);\n            return (article ? encodeSummaryArticle(article) : undefined);\n        },\n\n        /**\n            Get an article by its path\n\n            @param {String} level\n            @return {Object}\n        */\n        getArticleByPath(level) {\n            const article = summary.getByPath(level);\n            return (article ? encodeSummaryArticle(article) : undefined);\n        }\n    };\n\n    return result;\n}\n\nmodule.exports = encodeSummary;\n"]}